{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/dashboard.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/material/core\";\nfunction DashboardComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mes_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", mes_r1.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(mes_r1.viewValue);\n  }\n}\nexport class DashboardComponent {\n  constructor(service) {\n    this.service = service;\n    this.meses = [{\n      value: 0,\n      viewValue: 'Janeiro'\n    }, {\n      value: 1,\n      viewValue: 'Fevereiro'\n    }, {\n      value: 2,\n      viewValue: 'Março'\n    }, {\n      value: 3,\n      viewValue: 'Abril'\n    }, {\n      value: 4,\n      viewValue: 'Maio'\n    }, {\n      value: 5,\n      viewValue: 'Junho'\n    }, {\n      value: 6,\n      viewValue: 'Julho'\n    }, {\n      value: 7,\n      viewValue: 'Agosto'\n    }, {\n      value: 8,\n      viewValue: 'Setembro'\n    }, {\n      value: 9,\n      viewValue: 'Outubro'\n    }, {\n      value: 10,\n      viewValue: 'Novembro'\n    }, {\n      value: 11,\n      viewValue: 'Dezembro'\n    }];\n    this.entradas = [];\n    this.saldo = 0;\n    this.despesa = 0;\n    this.receita = 0;\n  }\n  ngOnInit() {\n    this.service.getEntradas().subscribe(entradas => {\n      this.entradas = entradas;\n      this.getReceitas();\n    });\n  }\n  getReceitas() {\n    this.entradas.forEach(entrada => {\n      if (entrada.tipo === 'receita') {\n        this.receita += parseInt(entrada.valor);\n      }\n    });\n  }\n  getDespesas() {}\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 41,\n  vars: 5,\n  consts: [[1, \"title\"], [1, \"flex\", \"header\"], [\"appearance\", \"fill\", 1, \"input-item\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"2023\"], [1, \"flex\", \"card-item\"], [1, \"flex-item\"], [1, \"receita\"], [1, \"center\"], [1, \"titulo\"], [1, \"center\", \"conteudo\"], [1, \"despesa\"], [1, \"saldo\"], [3, \"value\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Minhas Finan\\u00E7as\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\")(4, \"mat-form-field\", 2)(5, \"mat-label\");\n      i0.ɵɵtext(6, \"M\\u00EAs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-select\")(8, \"mat-option\");\n      i0.ɵɵtext(9, \"Selecione o m\\u00EAs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, DashboardComponent_mat_option_10_Template, 2, 2, \"mat-option\", 3);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\")(12, \"mat-form-field\", 2)(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Ano\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-select\")(16, \"mat-option\", 4);\n      i0.ɵɵtext(17, \"2023\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(18, \"div\", 5)(19, \"div\", 6)(20, \"mat-card\", 7)(21, \"mat-card-header\", 8)(22, \"mat-card-title\", 9);\n      i0.ɵɵtext(23, \" Receitas \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"mat-card-content\", 10);\n      i0.ɵɵtext(25);\n      i0.ɵɵpipe(26, \"currency\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"div\", 6)(28, \"mat-card\", 11)(29, \"mat-card-header\", 8)(30, \"mat-card-title\", 9);\n      i0.ɵɵtext(31, \" Despesas \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"mat-card-content\", 10);\n      i0.ɵɵtext(33, \" R$ 50,00 \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(34, \"div\", 6)(35, \"mat-card\", 12)(36, \"mat-card-header\", 8)(37, \"mat-card-title\", 9);\n      i0.ɵɵtext(38, \" Saldo \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"mat-card-content\", 10);\n      i0.ɵɵtext(40, \" R$ 0,00 \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.meses);\n      i0.ɵɵadvance(15);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(26, 2, ctx.receita, \"BRL\"), \" \");\n    }\n  },\n  dependencies: [i2.NgForOf, i3.MatCard, i3.MatCardContent, i3.MatCardHeader, i3.MatCardTitle, i4.MatFormField, i4.MatLabel, i5.MatSelect, i6.MatOption, i2.CurrencyPipe],\n  styles: [\".flex[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-evenly;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  height: 300px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  position: relative;\\n  font-size: 3rem;\\n  top: 24px;\\n  align-items: center;\\n  justify-content: center;\\n  display: flex;\\n}\\n\\n.mat-mdc-card[_ngcontent-%COMP%] {\\n  width: 400px;\\n  height: 120px;\\n}\\n\\n.input-item[_ngcontent-%COMP%] {\\n  width: 400px;\\n  margin-top: 90px;\\n}\\n\\n.card-item[_ngcontent-%COMP%] {\\n  margin-top: 50px;\\n  position: relative;\\n  top: -130px;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 1.2rem;\\n}\\n\\n.center[_ngcontent-%COMP%] {\\n  margin: 0 auto;\\n}\\n\\n.conteudo[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n}\\n\\n.titulo[_ngcontent-%COMP%] {\\n  font-size: 1.6rem;\\n  padding: 20px;\\n}\\n\\n.receita[_ngcontent-%COMP%] {\\n  background-color: rgb(75, 179, 75);\\n  color: #fff;\\n}\\n\\n.despesa[_ngcontent-%COMP%] {\\n  background-color: rgb(190, 81, 81);\\n  color: #fff;\\n}\\n\\n.saldo[_ngcontent-%COMP%] {\\n  background-color: rgb(35, 127, 177);\\n  color: #fff;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvZGFzaGJvYXJkL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDZCQUFBO0FBQ0o7O0FBRUE7RUFDSSxhQUFBO0FBQ0o7O0FBRUE7RUFDSSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLGFBQUE7QUFDSjs7QUFFQTtFQUNJLFlBQUE7RUFDQSxhQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFHQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0FBQUo7O0FBR0E7RUFDSSxXQUFBO0VBQ0EsZUFBQTtBQUFKOztBQUdBO0VBQ0ksY0FBQTtBQUFKOztBQUdBO0VBQ0ksaUJBQUE7QUFBSjs7QUFHQTtFQUNJLGlCQUFBO0VBQ0EsYUFBQTtBQUFKOztBQUdBO0VBQ0ksa0NBQUE7RUFDQSxXQUFBO0FBQUo7O0FBR0E7RUFDSSxrQ0FBQTtFQUNBLFdBQUE7QUFBSjs7QUFHQTtFQUNJLG1DQUFBO0VBQ0EsV0FBQTtBQUFKIiwic291cmNlc0NvbnRlbnQiOlsiLmZsZXgge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbn1cblxuLmhlYWRlciB7XG4gICAgaGVpZ2h0OiAzMDBweDtcbn1cblxuLnRpdGxlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICAgIHRvcDogMjRweDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5tYXQtbWRjLWNhcmQge1xuICAgIHdpZHRoOiA0MDBweDtcbiAgICBoZWlnaHQ6IDEyMHB4O1xufVxuXG4uaW5wdXQtaXRlbSB7XG4gICAgd2lkdGg6IDQwMHB4O1xuICAgIG1hcmdpbi10b3A6IDkwcHg7XG5cbn1cblxuLmNhcmQtaXRlbSB7XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtMTMwcHg7XG59XG5cbi5mbGV4LWl0ZW0ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEuMnJlbTtcbn1cblxuLmNlbnRlciB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5jb250ZXVkb3tcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbn1cblxuLnRpdHVsbyB7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gICAgcGFkZGluZzogMjBweDtcbn1cblxuLnJlY2VpdGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig3NSwgMTc5LCA3NSk7XG4gICAgY29sb3I6ICNmZmY7XG59XG5cbi5kZXNwZXNhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTkwLCA4MSwgODEpO1xuICAgIGNvbG9yOiAjZmZmO1xufVxuXG4uc2FsZG8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigzNSwgMTI3LCAxNzcpO1xuICAgIGNvbG9yOiAjZmZmO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAScA,sCAA0D;IAAAA,YAAiB;IAAAA,iBAAa;;;;IAAlDA,oCAAmB;IAACA,eAAiB;IAAjBA,sCAAiB;;;ACAzF,OAAM,MAAOC,kBAAkB;EAuB7BC,YAAoBC,OAAyB;IAAzB,YAAO,GAAPA,OAAO;IArB3B,UAAK,GAAG,CACN;MAAEC,KAAK,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAS,CAAC,EACjC;MAAED,KAAK,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAW,CAAC,EACnC;MAAED,KAAK,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAO,CAAC,EAC/B;MAAED,KAAK,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAO,CAAC,EAC/B;MAAED,KAAK,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAM,CAAC,EAC9B;MAAED,KAAK,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAO,CAAC,EAC/B;MAAED,KAAK,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAO,CAAC,EAC/B;MAAED,KAAK,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAQ,CAAC,EAChC;MAAED,KAAK,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAU,CAAC,EAClC;MAAED,KAAK,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAS,CAAC,EACjC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAU,CAAC,EACnC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAU,CAAC,CACpC;IAED,aAAQ,GAAU,EAAE;IAEpB,UAAK,GAAG,CAAC;IACT,YAAO,GAAG,CAAC;IACX,YAAO,GAAG,CAAC;EAGX;EAEAC,QAAQ;IACN,IAAI,CAACH,OAAO,CAACI,WAAW,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;MAC9C,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACC,WAAW,EAAE;IACpB,CAAC,CAAC;EACJ;EAEAA,WAAW;IACT,IAAI,CAACD,QAAQ,CAACE,OAAO,CAAEC,OAAgB,IAAI;MAEzC,IAAGA,OAAO,CAACC,IAAI,KAAK,SAAS,EAAC;QAC5B,IAAI,CAACC,OAAO,IAAIC,QAAQ,CAACH,OAAO,CAACI,KAAK,CAAC;;IAE3C,CAAC,CAAC;EACJ;EACAC,WAAW,IAGX;;AA5CWhB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT/BtB,6BAAmB;MAAAA,oCAAe;MAAAA,iBAAK;MACvCA,8BAAyB;MAKFA,wBAAG;MAAAA,iBAAY;MAC1BA,kCAAY;MACEA,oCAAe;MAAAA,iBAAa;MACxCA,mFAAwF;MAC1FA,iBAAa;MAIrBA,4BAAM;MAGWA,oBAAG;MAAAA,iBAAY;MAC1BA,mCAAY;MACgBA,qBAAI;MAAAA,iBAAa;MAQvDA,+BAA4B;MAORA,2BACJ;MAAAA,iBAAiB;MAGrBA,6CAA0C;MACtCA,aACJ;;MAAAA,iBAAmB;MAK3BA,+BAAuB;MAKPA,2BACJ;MAAAA,iBAAiB;MAGrBA,6CAA0C;MACtCA,2BACJ;MAAAA,iBAAmB;MAK3BA,+BAAuB;MAKPA,wBACJ;MAAAA,iBAAiB;MAGrBA,6CAA0C;MACtCA,0BACJ;MAAAA,iBAAmB;;;MA/DWA,gBAAQ;MAARA,mCAAQ;MA8BlCA,gBACJ;MADIA,0EACJ","names":["i0","DashboardComponent","constructor","service","value","viewValue","ngOnInit","getEntradas","subscribe","entradas","getReceitas","forEach","entrada","tipo","receita","parseInt","valor","getDespesas","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Projetos\\minhas-financas\\src\\app\\features\\dashboard\\components\\dashboard\\dashboard.component.html","C:\\Projetos\\minhas-financas\\src\\app\\features\\dashboard\\components\\dashboard\\dashboard.component.ts"],"sourcesContent":["<h1 class=\"title\" >Minhas Finanças</h1>\n<div class=\"flex header\">\n\n    <div >\n\n        <mat-form-field appearance=\"fill\" class=\"input-item\">\n            <mat-label>Mês</mat-label>\n            <mat-select>\n              <mat-option>Selecione o mês</mat-option>\n              <mat-option *ngFor=\"let mes of meses\" [value]=\"mes.value\">{{mes.viewValue}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n    </div>\n\n    <div >\n        \n        <mat-form-field appearance=\"fill\" class=\"input-item\">\n          <mat-label>Ano</mat-label>\n          <mat-select>\n            <mat-option value=\"2023\" >2023</mat-option>\n          </mat-select>\n        </mat-form-field>\n    </div>\n\n\n</div>\n\n<div class=\"flex card-item\">\n\n    <div class=\"flex-item\">\n\n        <mat-card class=\"receita\">\n            <mat-card-header class=\"center\">\n                <mat-card-title class=\"titulo\">\n                    Receitas\n                </mat-card-title>\n            </mat-card-header>\n        \n            <mat-card-content class=\"center conteudo\">\n                {{ receita | currency: 'BRL' }}\n            </mat-card-content>\n        </mat-card>\n        \n    </div>\n\n    <div class=\"flex-item\">\n\n        <mat-card class=\"despesa\">\n            <mat-card-header class=\"center\">\n                <mat-card-title class=\"titulo\">\n                    Despesas\n                </mat-card-title>\n            </mat-card-header>\n        \n            <mat-card-content class=\"center conteudo\">\n                R$ 50,00\n            </mat-card-content>\n        </mat-card>\n        \n    </div>\n\n    <div class=\"flex-item\">\n\n        <mat-card class=\"saldo\">\n            <mat-card-header class=\"center\">\n                <mat-card-title class=\"titulo\">\n                    Saldo\n                </mat-card-title>\n            </mat-card-header>\n        \n            <mat-card-content class=\"center conteudo\">\n                R$ 0,00\n            </mat-card-content>\n        </mat-card>\n        \n    </div>\n\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../../services/dashboard.service';\nimport { Entrada } from './models/entrada.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit{\n\n  meses = [\n    { value: 0, viewValue: 'Janeiro'},\n    { value: 1, viewValue: 'Fevereiro'},\n    { value: 2, viewValue: 'Março'},\n    { value: 3, viewValue: 'Abril'},\n    { value: 4, viewValue: 'Maio'},\n    { value: 5, viewValue: 'Junho'},\n    { value: 6, viewValue: 'Julho'},\n    { value: 7, viewValue: 'Agosto'},\n    { value: 8, viewValue: 'Setembro'},\n    { value: 9, viewValue: 'Outubro'},\n    { value: 10, viewValue: 'Novembro'},\n    { value: 11, viewValue: 'Dezembro'}\n  ]\n\n  entradas: any[] = [];\n\n  saldo = 0;\n  despesa = 0;\n  receita = 0;\n\n  constructor(private service: DashboardService) {    \n  }\n\n  ngOnInit(): void {\n    this.service.getEntradas().subscribe(entradas => {\n      this.entradas = entradas;\n      this.getReceitas();\n    });\n  }\n\n  getReceitas(){\n    this.entradas.forEach((entrada: Entrada) => {\n      \n      if(entrada.tipo === 'receita'){\n        this.receita += parseInt(entrada.valor);\n      }\n    });\n  }\n  getDespesas()\n  {\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}