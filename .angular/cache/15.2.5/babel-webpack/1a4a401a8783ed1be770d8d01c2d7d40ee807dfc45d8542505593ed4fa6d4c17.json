{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HttpBaseService {\n  constructor(injector) {\n    this.injector = injector;\n    this.apiBase = \"http://localhost:3000/\";\n    if (injector == null || injector == undefined) {\n      throw new Error('Injector não pode ser nulo.');\n    }\n    debugger;\n    this.httpClient = injector.get(this.apiBase);\n  }\n  httpGet(endpoint) {\n    return this.httpClient.get(`${this.apiBase}${endpoint}`);\n  }\n  httpPost(endpoint, dados) {\n    return this.httpClient.post(`${this.apiBase}${endpoint}`, dados);\n  }\n  httpPut(endpoint, dados) {\n    return this.httpClient.put(`${this.apiBase}${endpoint}`, dados);\n  }\n  httpDelete(endpoint) {\n    return this.httpClient.delete(`${this.apiBase}${endpoint}`);\n  }\n}\nHttpBaseService.ɵfac = function HttpBaseService_Factory(t) {\n  return new (t || HttpBaseService)(i0.ɵɵinject(i0.Injector));\n};\nHttpBaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpBaseService,\n  factory: HttpBaseService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,eAAe;EAK1BC,YAA+BC,QAAkB;IAAlB,aAAQ,GAARA,QAAQ;IAF/B,YAAO,GAAG,wBAAwB;IAGxC,IAAGA,QAAQ,IAAI,IAAI,IAAIA,QAAQ,IAAIC,SAAS,EAAC;MAC3C,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;;IAGhD;IACA,IAAI,CAACC,UAAU,GAAGH,QAAQ,CAACI,GAAG,CAAC,IAAI,CAACC,OAAO,CAAC;EAC9C;EAEOC,OAAO,CAACC,QAAgB;IAC7B,OAAO,IAAI,CAACJ,UAAU,CAACC,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,GAAGE,QAAQ,EAAE,CAAC;EAC1D;EACOC,QAAQ,CAACD,QAAgB,EAAEE,KAAU;IAC1C,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,GAAGE,QAAQ,EAAE,EAAEE,KAAK,CAAC;EAClE;EACOE,OAAO,CAACJ,QAAgB,EAAEE,KAAU;IACzC,OAAO,IAAI,CAACN,UAAU,CAACS,GAAG,CAAC,GAAG,IAAI,CAACP,OAAO,GAAGE,QAAQ,EAAE,EAAEE,KAAK,CAAC;EACjE;EACOI,UAAU,CAACN,QAAgB;IAChC,OAAO,IAAI,CAACJ,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACT,OAAO,GAAGE,QAAQ,EAAE,CAAC;EAC7D;;AAzBWT,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAiB,SAAfjB,eAAe;EAAAkB,YAFd;AAAM","names":["HttpBaseService","constructor","injector","undefined","Error","httpClient","get","apiBase","httpGet","endpoint","httpPost","dados","post","httpPut","put","httpDelete","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Projetos\\minhas-financas\\src\\app\\shared\\base\\http-base.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, Injector, Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpBaseService {\n\n  public readonly httpClient: HttpClient;\n  private apiBase = \"http://localhost:3000/\";\n\n  constructor(protected readonly injector: Injector) {\n    if(injector == null || injector == undefined){\n      throw new Error('Injector não pode ser nulo.');\n    }\n    \n    debugger;\n    this.httpClient = injector.get(this.apiBase);\n  }\n\n  public httpGet(endpoint: string): Observable<any>{\n    return this.httpClient.get(`${this.apiBase}${endpoint}`);\n  }\n  public httpPost(endpoint: string, dados: any): Observable<any>{\n    return this.httpClient.post(`${this.apiBase}${endpoint}`, dados);\n  }\n  public httpPut(endpoint: string, dados: any): Observable<any>{\n    return this.httpClient.put(`${this.apiBase}${endpoint}`, dados);\n  }\n  public httpDelete(endpoint: string): Observable<any>{\n    return this.httpClient.delete(`${this.apiBase}${endpoint}`);\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}